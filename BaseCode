% This program reads and processes VIMS oculus files 
% from a user-specified folder and saves corresponding output 
% files to another user-specified folder.
% Author Ethan Labianca-Campbell

% Following command makes the text window appear commanding the user
CreateStruct.Interpreter = 'tex';
CreateStruct.WindowStyle = 'modal';
msgbox('\fontsize{18} Select an input folder to read files, then select an output folder to put scanned files into.', CreateStruct)           

% Prompt user to choose a folder and return the path that the user selects
% Note we can change the start directory to any path, not just C:\
inputDirectory = uigetdir('C:\', 'Select a folder containing files to process.');

% Prompt user to choose a folder for saving data to and return the path
% Again, we can change the start directory to any path
outputDirectory = uigetdir('C:\', 'Select a folder for the output data.');

% Dir lists only *.txt files in the selected directory in a structured array
% Fullfile returns a vector with information about each file (name, folder, date, etc)
fileList = dir(fullfile(inputDirectory, '*.csv'));

% Now that you have a list of file names and folder paths, you can process each one.
for x = 1:length (fileList)

     filename = fullfile(fileList(x).folder, fileList(x).name);
     fprintf(1, 'Now reading %s\n', filename);
     fileID = fopen(filename,'r');
     dataArray = textscan(fileID,'%s%s%s%s%s%s%s%s%s%s%s%s%s%f%f%f%s','Delimiter',',','HeaderLines',1,'CollectOutput',false);
     fclose(fileID);

     %create table from file
     fullTable = table(dataArray{1:end});
     
     %create and index based on ISwait = False. Will delete Trues
     idx = (fullTable.Var17=="False");

     %deletes Trues
     dataArrayNoTrues = fullTable(idx,:);

     %created 2 new variables based on ClickCounts and Time
     Var18 = dataArrayNoTrues.Var16; 
     Var19 = dataArrayNoTrues.Var14;
     Var20 = dataArrayNoTrues.Var14;

     %adding the two new variables to the table
     dataArrayNoTruesWithMore = addvars(dataArrayNoTrues,Var18,Var19,Var20);
     
     %index for before and after True
     idxBeforeTrue = all((diff([dataArrayNoTruesWithMore.Var16; 0]) > 0),2);
     idxAfterTrue = all((diff([0; dataArrayNoTruesWithMore.Var16]) > 0),2);

     %data row before and after True
     dataBeforeTrue = dataArrayNoTruesWithMore(idxBeforeTrue,:);
     dataAfterTrue = dataArrayNoTruesWithMore(idxAfterTrue,:);

     %add in a start row for the sake of time calculations
     firstRow = dataArrayNoTruesWithMore(1,:);
     %add firstRow to dataAfterTrue table
     dataAfterTruePlusFirstRow = [firstRow;dataAfterTrue];

     %multiplied Var18 by 30 and placed in Var 19
     dataAfterTruePlusFirstRow.Var19= dataAfterTruePlusFirstRow.Var18.*30
     dataAfterTruePlusFirstRow.Var20= dataAfterTruePlusFirstRow.Var19./60
     
     %plots data and adjusts axes
     hold on
     plot(dataAfterTruePlusFirstRow.Var20,dataAfterTruePlusFirstRow.Var15);
     scatter(dataAfterTruePlusFirstRow.Var20,dataAfterTruePlusFirstRow.Var15,'filled', 'b');
     ylim([0 4])
     yticks([0 1 2 3 4])
     xticks([1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29])
     xlabel("Time (Seconds)")
     ylabel("VIMS rating")
     title("Temporal VIMS rating")

     %Estimate of Area Under Curve calculated
     AUC = trapz(dataAfterTruePlusFirstRow.Var15);
     
     %algorithm's little n (time endured through simulation) 
     n = max(dataAfterTruePlusFirstRow.Var20);
end
